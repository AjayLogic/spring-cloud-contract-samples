buildscript {
	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://repo.spring.io/release" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${findProperty('bootVersion') ?: bootVersion}"
		classpath "au.com.dius:pact-jvm-provider-gradle_2.12:3.5.23"
	}
}

println "Boot Version [${findProperty('bootVersion') ?: bootVersion}], Cloud version [${findProperty('BOM_VERSION') ?: BOM_VERSION}]"

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/release" }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: 'au.com.dius.pact'

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${project.findProperty('BOM_VERSION') ?: BOM_VERSION}"
	}
}

sourceCompatibility = org.gradle.api.JavaVersion.VERSION_1_8

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.cloud:spring-cloud-starter-stream-rabbit")

	testCompile "org.springframework.boot:spring-boot-starter-test"
	testCompile "au.com.dius:pact-jvm-consumer-junit_2.12:3.5.13"
}

test {
	testLogging {
		exceptionFormat = 'full'
	}
	afterSuite { desc, result ->
		if (!desc.parent) {
			println "Results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
			if (result.testCount == 0) {
				throw new IllegalStateException("No tests were found. Failing the build")
			}
		}
	}
}
new File("${project.rootDir}/target/pacts").mkdirs()

pact {
	publish {
		pactBrokerUrl = "http://localhost:8085"
		pactDirectory = "${project.rootDir}/target/pacts"
	}
}

publishToMavenLocal.dependsOn("pactPublish")
